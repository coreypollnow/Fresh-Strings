<script>
    (function (document, posthog) {
        if (posthog.__SV) return;

        window.posthog = posthog;
        posthog._i = [];

        posthog.init = function (apiKey, config, instanceName) {
            const script = document.createElement("script");
            script.type = "text/javascript";
            script.crossOrigin = "anonymous";
            script.async = true;
            script.src = config.api_host.replace(".i.posthog.com", "-assets.i.posthog.com") + "/static/array.js";

            const firstScript = document.getElementsByTagName("script")[0];
            firstScript.parentNode.insertBefore(script, firstScript);

            const instance = instanceName ? (posthog[instanceName] = []) : posthog;
            instance.people = instance.people || [];

            instance.toString = function (stub) {
                let name = "posthog";
                if (instanceName) name += `.${instanceName}`;
                return stub ? `${name} (stub)` : name;
            };

            instance.people.toString = function () {
                return `${instance.toString(1)}.people (stub)`;
            };

            const methods = [
                "init", "capture", "register", "register_once", "register_for_session", "unregister", "unregister_for_session",
                "getFeatureFlag", "getFeatureFlagPayload", "isFeatureEnabled", "reloadFeatureFlags",
                "updateEarlyAccessFeatureEnrollment", "getEarlyAccessFeatures", "on", "onFeatureFlags", "onSessionId",
                "getSurveys", "getActiveMatchingSurveys", "renderSurvey", "canRenderSurvey", "getNextSurveyStep",
                "identify", "setPersonProperties", "group", "resetGroups", "setPersonPropertiesForFlags",
                "resetPersonPropertiesForFlags", "setGroupPropertiesForFlags", "resetGroupPropertiesForFlags",
                "reset", "get_distinct_id", "getGroups", "get_session_id", "get_session_replay_url",
                "alias", "set_config", "startSessionRecording", "stopSessionRecording", "sessionRecordingStarted",
                "captureException", "loadToolbar", "get_property", "getSessionProperty", "createPersonProfile",
                "opt_in_capturing", "opt_out_capturing", "has_opted_in_capturing", "has_opted_out_capturing",
                "clear_opt_in_out_capturing", "debug", "getPageViewId"
            ];

            for (const method of methods) {
                instance[method] = function () {
                    instance.push([method, ...arguments]);
                };
            }

            posthog._i.push([apiKey, config, instanceName]);
        };

        posthog.__SV = 1;
    })(document, window.posthog || {});

    // Initialize PostHog
    posthog.init("phc_A2inykKZagDcmXWkqviD9MFufg6MspVV0slYEsxmutG", {
        api_host: "https://us.i.posthog.com",
        person_profiles: "identified_only" // or 'always' to create profiles for anonymous users as well
    });
</script>
